// <auto-generated />
using System;
using Infrastructure.EntityFramework.EventLog;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.EntityFramework.Migrations.EventLogDb
{
    [DbContext(typeof(EventLogDbContext))]
    [Migration("20210921181826_CheckpointTableRenamedToCheckpoints")]
    partial class CheckpointTableRenamedToCheckpoints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.EntityFramework.EventLog.EventEntity", b =>
                {
                    b.Property<long>("EventNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CausationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CausationNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommandTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CommitPosition")
                        .HasColumnType("bigint");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventSourcedType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("EventSourcedVersion")
                        .HasColumnType("bigint");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PositionAccuracy")
                        .HasColumnType("float");

                    b.Property<double?>("PositionAltitude")
                        .HasColumnType("float");

                    b.Property<double?>("PositionAltitudeAccuracy")
                        .HasColumnType("float");

                    b.Property<string>("PositionError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PositionHeading")
                        .HasColumnType("float");

                    b.Property<double?>("PositionLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("PositionLongitude")
                        .HasColumnType("float");

                    b.Property<double?>("PositionSpeed")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PositionTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long>("PreparePosition")
                        .HasColumnType("bigint");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventNumber");

                    b.HasIndex("EventSourcedType", "EventSourcedVersion")
                        .IsClustered(false);

                    b.HasIndex("EventSourcedType", "StreamId")
                        .IsClustered(false);

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Infrastructure.EntityFramework.ReadModel.ReadModelCheckpointEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("CommitPosition")
                        .HasColumnType("bigint");

                    b.Property<long>("EventNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("PreparePosition")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Checkpoints");
                });
#pragma warning restore 612, 618
        }
    }
}
